openapi: 3.0.0
info:
  title: prontogram
  version: '1.0'
  description: È l'API offerta dall'APP di messaggistica *Prontogram* che vi racchiude la capability di inoltrare messaggi.
servers:
  - url: 'https://soseng-unibo.stoplight.io/mocks/soseng-unibo/soseng-project-documentation/6636887'
    description: testingServer
paths:
  /message:
    parameters: []
    post:
      summary: Restituisci i messaggi
      operationId: post-message
      responses:
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                      next:
                        type: string
                      previous:
                        type: string
                  data:
                    type: object
                    properties:
                      body:
                        type: string
                        nullable: true
                  meta:
                    type: object
                    properties:
                      date:
                        type: string
                      sender:
                        type: string
                      receiver:
                        type: string
                      messageId:
                        type: integer
              examples:
                /message?messageId=100:
                  value:
                    messageId:
                      - 100
                    sender: acmesky
                    body: 'C''è una nuova offerta, codice offerta: 1234'
                    receiver: Mario Rossi
                    date: '20/02/2021, 10:04 CET'
                /message:
                  value:
                    messageId:
                      - 100
                      - 101
                      - 102
                      - 103
                    sender: null
                    body: null
                    receiver: Mario Rossi
                    date: null
      parameters:
        - schema:
            type: string
          in: query
          name: messageId
          description: Id del messaggio da leggere
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: token di autenticazione
              required:
                - token
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties:
                '':
                  type: string
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
        description: È richiesto un token che viene fornito dopo un processo di autenticazione
      description: ''
  /token:
    post:
      summary: Genera token
      operationId: post-token
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - token
                    properties:
                      token:
                        type: string
                        minLength: 1
                  meta:
                    type: object
                    required:
                      - expiration-date
                    properties:
                      expiration-date:
                        minLength: 1
                        type: string
                required:
                  - data
                  - meta
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: object
                  properties:
                    username:
                      type: string
                      minLength: 1
                    password:
                      type: string
                      minLength: 1
                  required:
                    - username
                    - password
              required:
                - data
            examples:
              Esempio:
                value:
                  data:
                    username: Mario
                    password: Albatros1a4
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                username:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - username
                - password
            examples: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: Specifica il nome utente e la password.
      description: 'È la risorsa che restituisce un token di autenticazione a fronte di una richiesta HTTP con metodo POST nel cui body sono passati username e password. '
      parameters: []
  /allmessage:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  token:
                    type: string
                    minLength: 1
                  expiration-date:
                    type: string
                    minLength: 1
                required:
                  - token
                  - expiration-date
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-allmessage
      description: 'È la risorsa che, a fronte di una richiesta HTTP che specifica un `token` identificativo, restituisce tutti i messaggi (in blocchi di cardinalità n) cui ha accesso il fruitore (utente o ACMESky) identificato da quel token: in dettaglio, l''utente ha accesso solo ai messaggi di cui è destinatario, mentre ACMESky ha accesso a tutti i messaggi che ha inoltrato ai suoi utenti mediante Prontogram e potrebbe richiederli per fini statistici, ad esempio.'
  /createmessage:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  token:
                    type: string
                    minLength: 1
                  expiration-date:
                    type: string
                    minLength: 1
                required:
                  - token
                  - expiration-date
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-createmessage
components:
  schemas: {}
  securitySchemes: {}
